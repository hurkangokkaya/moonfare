var ctx = document.getElementById("myChart")?.getContext("2d");
    (fteData = [
        { x: "01.18.2018", y: 2 },
        { x: "02.18.2018", y: 3 },
        { x: "03.18.2018", y: 3 },
        { x: "04.18.2018", y: 3 },
        { x: "05.18.2018", y: 4 },
        { x: "06.18.2018", y: 7 },
        { x: "07.18.2018", y: 8 },
        { x: "08.18.2018", y: 10 },
        { x: "09.18.2018", y: 13 },
        { x: "10.18.2018", y: 16 },
        { x: "11.18.2018", y: 20 },
        { x: "12.18.2018", y: 21 },
        { x: "01.18.2019", y: 22 },
        { x: "02.18.2019", y: 22 },
        { x: "03.18.2019", y: 25 },
        { x: "04.18.2019", y: 26 },
        { x: "05.18.2019", y: 27 },
        { x: "06.18.2019", y: 29 },
        { x: "07.18.2019", y: 32 },
        { x: "08.18.2019", y: 35 },
        { x: "09.18.2019", y: 36 },
        { x: "10.18.2019", y: 38 },
        { x: "11.18.2019", y: 45 },
        { x: "12.18.2019", y: 45 },
        { x: "01.18.2020", y: 49 },
        { x: "02.18.2020", y: 54 },
        { x: "03.18.2020", y: 60 },
        { x: "04.18.2020", y: 58 },
        { x: "05.18.2020", y: 62 },
        { x: "06.18.2020", y: 64 },
        { x: "07.18.2020", y: 64 },
        { x: "08.18.2020", y: 67 },
        { x: "09.18.2020", y: 70 },
        { x: "10.18.2020", y: 72 },
        { x: "11.18.2020", y: 74 },
        { x: "12.18.2020", y: 73 },
        { x: "01.18.2021", y: 81 },
        { x: "02.18.2021", y: 83 },
        { x: "03.18.2021", y: 87 },
        { x: "04.18.2021", y: 89 },
        { x: "05.18.2021", y: 94 },
        { x: "06.18.2021", y: 94 },
        { x: "07.18.2021", y: 100 },
        { x: "08.18.2021", y: 107 },
        { x: "09.18.2021", y: 112 },
        { x: "10.18.2021", y: 118 },
        { x: "11.18.2021", y: 123 },
        { x: "12.18.2021", y: 128 },
        { x: "01.18.2022", y: 139 },
        { x: "02.18.2022", y: 148 },
        { x: "03.18.2022", y: 156 },
        { x: "04.18.2022", y: 170 },
        { x: "05.18.2022", y: 176 },
        { x: "06.18.2022", y: 191 },
        { x: "07.18.2022", y: 197 },
        { x: "08.18.2022", y: 203 },
        { x: "09.18.2022", y: 211 },
        { x: "10.18.2022", y: 211 },
        { x: "11.18.2022", y: 211 },
        { x: "12.18.2022", y: 203 },
        { x: "01.18.2023", y: 197 },
        { x: "02.18.2023", y: 197 },
        { x: "03.18.2023", y: 197 },
        { x: "04.18.2023", y: 197 },
        { x: "05.18.2023", y: 197 },
        { x: "06.18.2023", y: 192 },
        { x: "07.18.2023", y: 190 },
        { x: "08.18.2023", y: 196 },
        { x: "09.18.2023", y: 189 },
        { x: "10.18.2023", y: 195 },
        { x: "11.18.2023", y: 193 },
    ]),
        (aumData = [
            { x: "01.18.2018", y: 9.7 },
            { x: "02.18.2018", y: 9.7 },
            { x: "03.18.2018", y: 9.7 },
            { x: "04.18.2018", y: 10.3 },
            { x: "05.18.2018", y: 14 },
            { x: "06.18.2018", y: 28.2 },
            { x: "07.18.2018", y: 33.3 },
            { x: "08.18.2018", y: 39.3 },
            { x: "09.18.2018", y: 42.7 },
            { x: "10.18.2018", y: 51.2 },
            { x: "11.18.2018", y: 56.2 },
            { x: "12.18.2018", y: 68.9 },
            { x: "01.18.2019", y: 73.6 },
            { x: "02.18.2019", y: 79.5 },
            { x: "03.18.2019", y: 95.5 },
            { x: "04.18.2019", y: 107.3 },
            { x: "05.18.2019", y: 116.5 },
            { x: "06.18.2019", y: 136 },
            { x: "07.18.2019", y: 158.7 },
            { x: "08.18.2019", y: 165.5 },
            { x: "09.18.2019", y: 174.2 },
            { x: "10.18.2019", y: 184.6 },
            { x: "11.18.2019", y: 201.6 },
            { x: "12.18.2019", y: 234.6 },
            { x: "01.18.2020", y: 252 },
            { x: "02.18.2020", y: 265.8 },
            { x: "03.18.2020", y: 269.2 },
            { x: "04.18.2020", y: 285.1 },
            { x: "05.18.2020", y: 327.9 },
            { x: "06.18.2020", y: 364.3 },
            { x: "07.18.2020", y: 388.9 },
            { x: "08.18.2020", y: 398.9 },
            { x: "09.18.2020", y: 433.3 },
            { x: "10.18.2020", y: 457.2 },
            { x: "11.18.2020", y: 486.4 },
            { x: "12.18.2020", y: 528.6 },
            { x: "01.18.2021", y: 565.5 },
            { x: "02.18.2021", y: 600.2 },
            { x: "03.18.2021", y: 695 },
            { x: "04.18.2021", y: 803.7 },
            { x: "05.18.2021", y: 941 },
            { x: "06.18.2021", y: 966.6 },
            { x: "07.18.2021", y: 991.7 },
            { x: "08.18.2021", y: 1035.9 },
            { x: "09.18.2021", y: 1114.5 },
            { x: "10.18.2021", y: 1165 },
            { x: "11.18.2021", y: 1275.4 },
            { x: "12.18.2021", y: 1453.5 },
            { x: "01.18.2022", y: 1540.1 },
            { x: "02.18.2022", y: 1595.8 },
            { x: "03.18.2022", y: 1653.8 },
            { x: "04.18.2022", y: 1730.6 },
            { x: "05.18.2022", y: 1828.4 },
            { x: "06.18.2022", y: 1995 },
            { x: "07.18.2022", y: 2059.9 },
            { x: "08.18.2022", y: 2119.8 },
            { x: "09.18.2022", y: 2164.5 },
            { x: "10.18.2022", y: 2212.8 },
            { x: "11.18.2022", y: 2247.8 },
            { x: "12.18.2022", y: 2400 },
            { x: "01.18.2023", y: 2378 },
            { x: "02.18.2023", y: 2423 },
            { x: "03.18.2023", y: 2489 },
            { x: "04.18.2023", y: 2500 },
            { x: "05.18.2023", y: 2500 },
            { x: "06.18.2023", y: 2600 },
            { x: "07.18.2023", y: 2600 },
            { x: "08.18.2023", y: 2700 },
            { x: "09.18.2023", y: 2700 },
            { x: "10.18.2023", y: 2700 },
            { x: "11.18.2023", y: 2700 },
        ]),
        (totalDuration = 1500),
        (animation = {
            x: {
                type: "number",
                easing: "easeOutQuint",
                duration: (delayBetweenPoints =
                    1500 /
                    (investorData = [
                        { x: "01.18.2018", y: 30 },
                        { x: "02.18.2018", y: 30 },
                        { x: "03.18.2018", y: 30 },
                        { x: "04.18.2018", y: 30 },
                        { x: "05.18.2018", y: 37 },
                        { x: "06.18.2018", y: 68 },
                        { x: "07.18.2018", y: 78 },
                        { x: "08.18.2018", y: 89 },
                        { x: "09.18.2018", y: 98 },
                        { x: "10.18.2018", y: 112 },
                        { x: "11.18.2018", y: 119 },
                        { x: "12.18.2018", y: 136 },
                        { x: "01.18.2019", y: 146 },
                        { x: "02.18.2019", y: 168 },
                        { x: "03.18.2019", y: 198 },
                        { x: "04.18.2019", y: 224 },
                        { x: "05.18.2019", y: 248 },
                        { x: "06.18.2019", y: 285 },
                        { x: "07.18.2019", y: 330 },
                        { x: "08.18.2019", y: 359 },
                        { x: "09.18.2019", y: 386 },
                        { x: "10.18.2019", y: 405 },
                        { x: "11.18.2019", y: 428 },
                        { x: "12.18.2019", y: 467 },
                        { x: "01.18.2020", y: 482 },
                        { x: "02.18.2020", y: 509 },
                        { x: "03.18.2020", y: 521 },
                        { x: "04.18.2020", y: 540 },
                        { x: "05.18.2020", y: 581 },
                        { x: "06.18.2020", y: 687 },
                        { x: "07.18.2020", y: 724 },
                        { x: "08.18.2020", y: 751 },
                        { x: "09.18.2020", y: 809 },
                        { x: "10.18.2020", y: 882 },
                        { x: "11.18.2020", y: 948 },
                        { x: "12.18.2020", y: 1032 },
                        { x: "01.18.2021", y: 1107 },
                        { x: "02.18.2021", y: 1190 },
                        { x: "03.18.2021", y: 1308 },
                        { x: "04.18.2021", y: 1444 },
                        { x: "05.18.2021", y: 1612 },
                        { x: "06.18.2021", y: 1678 },
                        { x: "07.18.2021", y: 1716 },
                        { x: "08.18.2021", y: 1787 },
                        { x: "09.18.2021", y: 1898 },
                        { x: "10.18.2021", y: 1992 },
                        { x: "11.18.2021", y: 2146 },
                        { x: "12.18.2021", y: 2407 },
                        { x: "01.18.2022", y: 2525 },
                        { x: "02.18.2022", y: 2586 },
                        { x: "03.18.2022", y: 2689 },
                        { x: "04.18.2022", y: 2838 },
                        { x: "05.18.2022", y: 2956 },
                        { x: "06.18.2022", y: 3054 },
                        { x: "07.18.2022", y: 3110 },
                        { x: "08.18.2022", y: 3171 },
                        { x: "09.18.2022", y: 3241 },
                        { x: "10.18.2022", y: 3289 },
                        { x: "11.18.2022", y: 3332 },
                        { x: "12.18.2022", y: 3394 },
                        { x: "01.18.2023", y: 3453 },
                        { x: "02.18.2023", y: 3476 },
                        { x: "03.18.2023", y: 3564 },
                        { x: "04.18.2023", y: 3676 },
                        { x: "05.18.2023", y: 3757 },
                        { x: "06.18.2023", y: 3798 },
                        { x: "07.18.2023", y: 3851 },
                        { x: "08.18.2023", y: 3953 },
                        { x: "09.18.2023", y: 3993 },
                        { x: "10.18.2023", y: 4038 },
                        { x: "11.18.2023", y: 4085 },
                    ]).length),
                from: NaN,
                delay: (_) => ("data" !== _.type || _.xStarted ? 0 : ((_.xStarted = !0), _.index * delayBetweenPoints)),
            },
            y: {
                type: "number",
                easing: "easeOutQuint",
                duration: delayBetweenPoints,
                from: (previousY = (_) => (0 === _.index ? _.chart.scales.y.getPixelForValue(100) : _.chart.getDatasetMeta(_.datasetIndex).data[_.index - 1].getProps(["y"], !0).y)),
                delay: (_) => ("data" !== _.type || _.yStarted ? 0 : ((_.yStarted = !0), _.index * delayBetweenPoints)),
            },
        }),
        (data = {
            datasets: [
                {
                    label: "AuM",
                    backgroundColor: "rgb(252, 100, 52)",
                    borderColor: "rgb(252, 100, 52)",
                    borderWidth: 4,
                    data: aumData,
                    pointHoverBackgroundColor: "rgb(252, 100, 52, 10)",
                    pointHoverBorderColor: "rgb(252, 100, 52, 10)",
                    pointHoverRadius: 12,
                },
                {
                    label: "EMPLOYEES",
                    backgroundColor: "rgb(153, 168, 246)",
                    borderColor: "rgb(153, 168, 246)",
                    borderWidth: 4,
                    data: fteData,
                    pointHoverBackgroundColor: "rgb(153, 168, 246)",
                    pointHoverBorderColor: "rgb(153, 168, 246)",
                    pointHoverRadius: 12,
                },
                {
                    label: "INVESTORS",
                    backgroundColor: "rgb(248, 240, 217)",
                    borderColor: "rgb(248, 248, 217)",
                    borderWidth: 4,
                    data: investorData,
                    pointHoverBackgroundColor: "rgb(248, 248, 217)",
                    pointHoverBorderColor: "rgb(248, 248, 217)",
                    pointHoverRadius: 12,
                },
            ],
        }),
        (dataOne = {
            datasets: [
                {
                    label: "AuM",
                    backgroundColor: "rgb(252, 100, 52)",
                    borderColor: "rgb(252, 100, 52)",
                    borderWidth: 4,
                    data: aumData,
                    pointHoverBackgroundColor: "rgb(252, 100, 52, 10)",
                    pointHoverBorderColor: "rgb(252, 100, 52, 10)",
                    pointHoverRadius: 12,
                },
            ],
        }),
        (dataTwo = {
            datasets: [
                {
                    label: "EMPLOYEES",
                    backgroundColor: "rgb(153, 168, 246)",
                    borderColor: "rgb(153, 168, 246)",
                    borderWidth: 4,
                    data: fteData,
                    pointHoverBackgroundColor: "rgb(153, 168, 246)",
                    pointHoverBorderColor: "rgb(153, 168, 246)",
                    pointHoverRadius: 12,
                },
            ],
        }),
        (dataThree = {
            datasets: [
                {
                    label: "INVESTORS",
                    backgroundColor: "rgb(248, 240, 217)",
                    borderColor: "rgb(248, 248, 217)",
                    borderWidth: 4,
                    data: investorData,
                    pointHoverBackgroundColor: "rgb(248, 248, 217)",
                    pointHoverBorderColor: "rgb(248, 248, 217)",
                    pointHoverRadius: 12,
                },
            ],
        }),
        (config = {
            type: "line",
            data: data,
            options: {
                scaleShowValues: !1,
                spanGaps: !0,
                layout: { padding: { top: 0 } },
                tooltips: { mode: "nearest" },
                animation: animation,
                interaction: { intersect: !1, mode: "nearest" },
                plugins: {
                    tooltip: {
                        callbacks: {
                            title: function (_, $) {},
                            label: function (_, $) {
                                let o = _.dataset.label,
                                    y = _.raw.y;
                                return "AuM" != o ? o + ": " + y : y > 1e3 ? ((y /= 1e3), o + ": " + (y = y.toFixed(2)) + "b") : o + ": " + y + "m";
                            },
                        },
                        mode: "nearest",
                        displayColors: !1,
                        caretSize: 0,
                        yPadding: 822,
                        xPadding: 126,
                        backgroundColor: "rgba(67, 63, 56, 1)",
                        cornerRadius: 16,
                    },
                    legend: { display: !1, position: "top" },
                },
                pointRadius: 0,
                scales: { x: { ticks: { display: !1 }, grid: { drawTicks: !1, display: !1, drawBorder: !1 } }, y: { ticks: { display: !1 }, grid: { drawTicks: !1, display: !1, drawBorder: !1 } } },
            },
            plugins: [
                (custom_canvas_background_color = {
                    id: "custom_canvas_background_color",
                    beforeDraw(_, $, o) {
                        let {
                            ctx: y,
                            chartArea: { top: r, right: a, bottom: e, left: t, width: x, height: i },
                            scales: { x: d, y: l },
                        } = _;
                        y.save(), (y.globalCompositeOperation = "destination-over"), (y.fillStyle = "#302F2D"), y.fillRect(0, 0, _.width, _.height), y.restore();
                    },
                }),
            ],
        }),
        (configOne = {
            type: "line",
            data: dataOne,
            options: {
                scaleShowValues: !1,
                spanGaps: !0,
                layout: { padding: { top: 24 } },
                tooltips: { mode: "nearest" },
                animation: animation,
                interaction: { intersect: !1, mode: "nearest" },
                plugins: {
                    tooltip: {
                        callbacks: {
                            title: function (_, $) {},
                            label: function (_, $) {
                                let o = _.dataset.label,
                                    y = _.raw.y;
                                return "AuM" != o ? o + ": " + y : y > 1e3 ? ((y /= 1e3), o + ": " + (y = y.toFixed(2)) + "b") : o + ": " + y + "m";
                            },
                        },
                        mode: "nearest",
                        displayColors: !1,
                        caretSize: 0,
                        yPadding: 822,
                        xPadding: 126,
                        backgroundColor: "rgba(67, 63, 56, 1)",
                        cornerRadius: 16,
                    },
                    legend: { display: !1, position: "top" },
                },
                pointRadius: 0,
                scales: { x: { ticks: { display: !1 }, grid: { drawTicks: !1, display: !1, drawBorder: !1 } }, y: { ticks: { display: !1 }, grid: { drawTicks: !1, display: !1, drawBorder: !1 } } },
            },
            plugins: [custom_canvas_background_color],
        }),
        (configTwo = {
            type: "line",
            data: dataTwo,
            options: {
                scaleShowValues: !1,
                spanGaps: !0,
                layout: { padding: { top: 24 } },
                tooltips: { mode: "nearest" },
                animation: animation,
                interaction: { intersect: !1, mode: "nearest" },
                plugins: {
                    tooltip: {
                        callbacks: {
                            title: function (_, $) {},
                            label: function (_, $) {
                                let o = _.dataset.label,
                                    y = _.raw.y;
                                return "AuM" != o ? o + ": " + y : y > 1e3 ? ((y /= 1e3), o + ": " + (y = y.toFixed(2)) + "b") : o + ": " + y + "m";
                            },
                        },
                        mode: "nearest",
                        displayColors: !1,
                        caretSize: 0,
                        yPadding: 822,
                        xPadding: 126,
                        backgroundColor: "rgba(67, 63, 56, 1)",
                        cornerRadius: 16,
                    },
                    legend: { display: !1, position: "top" },
                },
                pointRadius: 0,
                scales: { x: { ticks: { display: !1 }, grid: { drawTicks: !1, display: !1, drawBorder: !1 } }, y: { ticks: { display: !1 }, grid: { drawTicks: !1, display: !1, drawBorder: !1 } } },
            },
            plugins: [custom_canvas_background_color],
        }),
        (configThree = {
            type: "line",
            data: dataThree,
            options: {
                scaleShowValues: !1,
                spanGaps: !0,
                layout: { padding: { top: 24 } },
                tooltips: { mode: "nearest" },
                animation: animation,
                interaction: { intersect: !1, mode: "nearest" },
                plugins: {
                    tooltip: {
                        callbacks: {
                            title: function (_, $) {},
                            label: function (_, $) {
                                let o = _.dataset.label,
                                    y = _.raw.y;
                                return "AuM" != o ? o + ": " + y : y > 1e3 ? ((y /= 1e3), o + ": " + (y = y.toFixed(2)) + "b") : o + ": " + y + "m";
                            },
                        },
                        mode: "nearest",
                        displayColors: !1,
                        caretSize: 0,
                        yPadding: 822,
                        xPadding: 126,
                        backgroundColor: "rgba(67, 63, 56, 1)",
                        cornerRadius: 16,
                    },
                    legend: { display: !1, position: "top" },
                },
                pointRadius: 0,
                scales: { x: { ticks: { display: !1 }, grid: { drawTicks: !1, display: !1, drawBorder: !1 } }, y: { ticks: { display: !1 }, grid: { drawTicks: !1, display: !1, drawBorder: !1 } } },
            },
            plugins: [custom_canvas_background_color],
        });
